name: Drive Watch

on:
  schedule:
    - cron: '*/10 * * * *'
  workflow_dispatch:

jobs:
  watch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib
      - name: Scan Drive for new videos
        env:
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
          DRIVE_FOLDER_ID: '1m-OjLhXttfS655ldGJxr9xFOqsWY25sD'
        run: |
          python - <<'PY'
import json, os, pathlib
from google.oauth2 import service_account
from googleapiclient.discovery import build

folder_id = os.environ['DRIVE_FOLDER_ID']
creds = service_account.Credentials.from_service_account_info(json.loads(os.environ['GOOGLE_SERVICE_ACCOUNT_JSON']))
drive = build('drive', 'v3', credentials=creds)
log_path = pathlib.Path('public/mags-log.json')
log = json.load(open(log_path)) if log_path.exists() else {"clips": []}
existing = {c.get('id') for c in log.get('clips', [])}
query = f"'{folder_id}' in parents and mimeType contains 'video/'"
files = drive.files().list(q=query, fields='files(id,name,modifiedTime)').execute().get('files', [])
new = [f for f in files if f['id'] not in existing]
for f in new:
    log['clips'].append({'id': f['id'], 'name': f['name'], 'timestamp': f['modifiedTime']})
json.dump(log, open(log_path, 'w'), indent=2)
PY
