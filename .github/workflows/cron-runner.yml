name: mags-cron

on:
  schedule: [{ cron: "*/10 * * * *" }]
  workflow_dispatch: {}
  repository_dispatch:
    types: [mags-run-queue]

permissions:
  contents: read

jobs:
  run-queue:
    runs-on: ubuntu-latest
    steps:
      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Run job
        id: runjob
        shell: bash
        env:
          API_BASE: ${{ secrets.API_BASE }}
          WORKER_KEY: ${{ secrets.WORKER_KEY }}
        run: |
          set -euo pipefail
          # claim
          curl -s -X POST "$API_BASE/api/queue/claim" \
            -H "X-Worker-Key: $WORKER_KEY" -H "content-type: application/json" \
            -d '{}' > job.json
          ID=$(jq -r '.id // empty' job.json || true)
          echo "ID=$ID"
          if [ -z "${ID:-}" ]; then
            echo "No jobs in queue; exiting 0"
            echo "nojob=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Here is where you'd actually do the work; we just echo payload for now.
          jq -r '.payload[0].plain_text // empty' job.json > run.log 2>/dev/null || true
          echo "nojob=false" >> "$GITHUB_OUTPUT"

      - name: Mark complete
        if: steps.runjob.outputs.nojob == 'false'
        shell: bash
        env:
          API_BASE: ${{ secrets.API_BASE }}
          WORKER_KEY: ${{ secrets.WORKER_KEY }}
        run: |
          set -euo pipefail
          ID=$(jq -r '.id' job.json)
          curl -s -X POST "$API_BASE/api/queue/complete" \
            -H "X-Worker-Key: $WORKER_KEY" -H "content-type: application/json" \
            -d "{\"id\":\"$ID\"}" >/dev/null

      - name: Mark failed
        if: failure() && steps.runjob.outputs.nojob == 'false'
        shell: bash
        env:
          API_BASE: ${{ secrets.API_BASE }}
          WORKER_KEY: ${{ secrets.WORKER_KEY }}
        run: |
          set -euo pipefail
          ID=$(jq -r '.id' job.json)
          ERR=$(cat run.log 2>/dev/null || echo "runner failed")
          curl -s -X POST "$API_BASE/api/queue/fail" \
            -H "X-Worker-Key: $WORKER_KEY" -H "content-type: application/json" \
            -d '{"id":"'"$ID"'","error":'"$(jq -Rn --arg e "$ERR" '$e')"'}' >/dev/null
