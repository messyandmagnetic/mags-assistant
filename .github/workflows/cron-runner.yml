name: mags-cron

on:
  schedule: [{ cron: "*/10 * * * *" }]
  workflow_dispatch: {}
  repository_dispatch:
    types: [mags-run-queue]

permissions:
  contents: read

jobs:
  run-queue:
    runs-on: ubuntu-latest
    env:
      API_BASE: ${{ secrets.API_BASE }}
      WORKER_KEY: ${{ secrets.WORKER_KEY }}
    steps:
      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Claim next job
        run: |
          set -e
          JOB=$(curl -s -X POST "$API_BASE/api/queue/claim" -H "X-Worker-Key: $WORKER_KEY" -H "content-type: application/json")
          echo "$JOB" | tee job.json
          if grep -q '"empty":true' job.json; then
            echo "No jobs"; exit 0
          fi

      - name: Run job
        run: |
          set -e
          curl -s -X POST "$API_BASE/api/run" \
            -H "X-Worker-Key: $WORKER_KEY" -H "content-type: application/json" \
            --data-binary @job.json | tee run.json

      - name: Mark complete
        if: success()
        run: |
          ID=$(jq -r '.id' job.json)
          curl -s -X POST "$API_BASE/api/queue/complete" -H "X-Worker-Key: $WORKER_KEY" -H "content-type: application/json" --data "{\"id\":\"$ID\"}"

      - name: Mark failed
        if: failure()
        run: |
          ID=$(jq -r '.id' job.json)
          ERR=$(cat run.json 2>/dev/null || echo "runner failed")
          curl -s -X POST "$API_BASE/api/queue/fail" -H "X-Worker-Key: $WORKER_KEY" -H "content-type: application/json" --data "{\"id\":\"$ID\",\"error\":${ERR@Q}}"
