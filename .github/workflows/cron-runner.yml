name: mags-cron

on:
  schedule: [{ cron: "*/10 * * * *" }]
  workflow_dispatch: {}
  repository_dispatch:
    types: [mags-run-queue]

permissions:
  contents: read

jobs:
  run-queue:
    runs-on: ubuntu-latest
    env:
      API_BASE: ${{ secrets.API_BASE }}
      WORKER_KEY: ${{ secrets.WORKER_KEY }}
    steps:
      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Claim next job
        shell: bash
        run: |
          set -euo pipefail
          echo "Claiming next job from $API_BASE ..."
          CLAIM_RESP=$(curl -sS -X POST "$API_BASE/api/queue/claim" \
            -H "X-Worker-Key: $WORKER_KEY" \
            -H "content-type: application/json" \
            -d '{}')
          echo "$CLAIM_RESP" | tee job.json

          if jq -e '.id' job.json >/dev/null 2>&1; then
            echo "CLAIMED_ID=$(jq -r '.id' job.json)" >> "$GITHUB_ENV"
            echo "NO_JOB=false" >> "$GITHUB_ENV"
          else
            echo "No job returned or invalid JSON"
            echo "NO_JOB=true" >> "$GITHUB_ENV"
          fi

      - name: Run job
        if: env.NO_JOB == 'false'
        shell: bash
        run: |
          set -euo pipefail
          echo "Running job $CLAIMED_ID ..."
          curl -sS -X POST "$API_BASE/api/queue/run" \
            -H "X-Worker-Key: $WORKER_KEY" \
            -H "content-type: application/json" \
            --data-binary @job.json | tee run.json

      - name: Mark complete
        if: env.NO_JOB == 'false'
        shell: bash
        run: |
          set -euo pipefail
          ID="$CLAIMED_ID"
          curl -sS -X POST "$API_BASE/api/queue/complete" \
            -H "X-Worker-Key: $WORKER_KEY" \
            -H "content-type: application/json" \
            -d "{\"id\":\"$ID\"}"

      - name: Mark failed
        if: env.NO_JOB == 'false' && failure()
        shell: bash
        run: |
          set -euo pipefail
          ID="$CLAIMED_ID"
          ERR="$(cat run.json 2>/dev/null || echo 'runner failed')"
          curl -sS -X POST "$API_BASE/api/queue/fail" \
            -H "X-Worker-Key: $WORKER_KEY" \
            -H "content-type: application/json" \
            -d "{\"id\":\"$ID\",\"error\":$(
              jq -Rs '.' <<<"$ERR"
            )}"
